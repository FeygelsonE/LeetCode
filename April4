# def two_sum(nums, target)
#     i = 0
#     while i < nums.length
#         j = i + 1
#         while j < nums.length
#             if nums[i] + nums[j] == target
#                 return [i, j]
#             end
#             j += 1
#         end
#         i += 1
#     end
# end
def two_sum(nums, target)
  hsh = Hash.new()
  nums.each_with_index do |val, idx|
    if hsh.has_value?(val)
      return [hsh.key(val), idx]
    else
      hsh[idx] = target - val
    end
  end
end

def num_jewels_in_stones(j, s)
    hsh = Hash.new()
    j.each_char do |ch|
        hsh[ch] = true
    end
    count = 0
    s.each_char do |ch|
        count += 1 if hsh.key?(ch)
    end
    count
end

p num_jewels_in_stones("aA", "aAAbbbb")

def custom_sort_string(s, t)
    hasht = Hash.new()
    hasht.default = 0
    t.each_char do |ch|
        hasht[ch] += 1
    end
    result = ""
    s.each_char do |ch|
        if hasht.has_key?(ch)
            hasht[ch].times do
                result.concat(ch)
            end
        end
    end
    result.concat(t.delete(result))
end
